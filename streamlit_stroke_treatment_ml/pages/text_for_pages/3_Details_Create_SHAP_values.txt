# To be printed as markdown on the "Details" page. 
# ---------------------------------------------------------------------

## ⚖️ SHAP values  

For the simplest explanation of what the app does:
1. The input patient details are converted into a table that the model knows how to read. This table can also be read by the SHAP explainer model.
2. The data is passed to the SHAP explainer model.
3. The model provides a series of SHAP values. The values for each patient are not affected by any other patients. A SHAP value is calculated for each input patient detail and for each stroke team.

### Creating a waterfall plot
                
To create a waterfall plot:
1. Separate off one patient's data.
2. Sort the SHAP values from smallest to biggest.
3. Add up all of the 119 values in the middle. Each of these should have a small effect compared with the remaining 9 values.
4. Plot the base probability.
5. For each value in the table in turn, add it to the probability so far. Work downwards along the waterfall until the plot is complete.

### Creating a wizard\'s hat plot
        
To create a wizard's hat plot:
1. Combine all of the separate teams' values into one value by adding them together.
2. For each feature, calculate the standard deviation across all of its SHAP values. This is a measure of how similar the values are.
3. Sort the table from the smallest standard deviation (most similar values) to the largest. This is the order in which we'll plot the data.
4. For one team at a time, go back to the original table and:
1. Draw the base probability.
2. Calculate how much the first feature in the list changes the base probability, and plot that on the next row.
3. Continue working down the waterfall until you reach the bottom.
5. In the final row, take all of the final probabilities of thrombolysis and create a violin plot to show the distribution of values.r each stroke team.
